// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/pubsub/v1/pubsub.proto

package com.google.pubsub.v1;

/**
 * <pre>
 * Configuration for a BigQuery subscription.
 * </pre>
 *
 * Protobuf type {@code google.pubsub.v1.BigQueryConfig}
 */
public final class BigQueryConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.pubsub.v1.BigQueryConfig)
    BigQueryConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use BigQueryConfig.newBuilder() to construct.
  private BigQueryConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private BigQueryConfig() {
    table_ = "";
    state_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new BigQueryConfig();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private BigQueryConfig(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            table_ = s;
            break;
          }
          case 16: {

            useTopicSchema_ = input.readBool();
            break;
          }
          case 24: {

            writeMetadata_ = input.readBool();
            break;
          }
          case 32: {

            dropUnknownFields_ = input.readBool();
            break;
          }
          case 40: {
            int rawValue = input.readEnum();

            state_ = rawValue;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.pubsub.v1.PubsubProto.internal_static_google_pubsub_v1_BigQueryConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.pubsub.v1.PubsubProto.internal_static_google_pubsub_v1_BigQueryConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.pubsub.v1.BigQueryConfig.class, com.google.pubsub.v1.BigQueryConfig.Builder.class);
  }

  /**
   * <pre>
   * Possible states for a BigQuery subscription.
   * </pre>
   *
   * Protobuf enum {@code google.pubsub.v1.BigQueryConfig.State}
   */
  public enum State
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Default value. This value is unused.
     * </pre>
     *
     * <code>STATE_UNSPECIFIED = 0;</code>
     */
    STATE_UNSPECIFIED(0),
    /**
     * <pre>
     * The subscription can actively send messages to BigQuery
     * </pre>
     *
     * <code>ACTIVE = 1;</code>
     */
    ACTIVE(1),
    /**
     * <pre>
     * Cannot write to the BigQuery table because of permission denied errors.
     * </pre>
     *
     * <code>PERMISSION_DENIED = 2;</code>
     */
    PERMISSION_DENIED(2),
    /**
     * <pre>
     * Cannot write to the BigQuery table because it does not exist.
     * </pre>
     *
     * <code>NOT_FOUND = 3;</code>
     */
    NOT_FOUND(3),
    /**
     * <pre>
     * Cannot write to the BigQuery table due to a schema mismatch.
     * </pre>
     *
     * <code>SCHEMA_MISMATCH = 4;</code>
     */
    SCHEMA_MISMATCH(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Default value. This value is unused.
     * </pre>
     *
     * <code>STATE_UNSPECIFIED = 0;</code>
     */
    public static final int STATE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * The subscription can actively send messages to BigQuery
     * </pre>
     *
     * <code>ACTIVE = 1;</code>
     */
    public static final int ACTIVE_VALUE = 1;
    /**
     * <pre>
     * Cannot write to the BigQuery table because of permission denied errors.
     * </pre>
     *
     * <code>PERMISSION_DENIED = 2;</code>
     */
    public static final int PERMISSION_DENIED_VALUE = 2;
    /**
     * <pre>
     * Cannot write to the BigQuery table because it does not exist.
     * </pre>
     *
     * <code>NOT_FOUND = 3;</code>
     */
    public static final int NOT_FOUND_VALUE = 3;
    /**
     * <pre>
     * Cannot write to the BigQuery table due to a schema mismatch.
     * </pre>
     *
     * <code>SCHEMA_MISMATCH = 4;</code>
     */
    public static final int SCHEMA_MISMATCH_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static State valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static State forNumber(int value) {
      switch (value) {
        case 0: return STATE_UNSPECIFIED;
        case 1: return ACTIVE;
        case 2: return PERMISSION_DENIED;
        case 3: return NOT_FOUND;
        case 4: return SCHEMA_MISMATCH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<State>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        State> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<State>() {
            public State findValueByNumber(int number) {
              return State.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.pubsub.v1.BigQueryConfig.getDescriptor().getEnumTypes().get(0);
    }

    private static final State[] VALUES = values();

    public static State valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private State(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.pubsub.v1.BigQueryConfig.State)
  }

  public static final int TABLE_FIELD_NUMBER = 1;
  private volatile java.lang.Object table_;
  /**
   * <pre>
   * The name of the table to which to write data, of the form
   * {projectId}:{datasetId}.{tableId}
   * </pre>
   *
   * <code>string table = 1;</code>
   * @return The table.
   */
  @java.lang.Override
  public java.lang.String getTable() {
    java.lang.Object ref = table_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      table_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of the table to which to write data, of the form
   * {projectId}:{datasetId}.{tableId}
   * </pre>
   *
   * <code>string table = 1;</code>
   * @return The bytes for table.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTableBytes() {
    java.lang.Object ref = table_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      table_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int USE_TOPIC_SCHEMA_FIELD_NUMBER = 2;
  private boolean useTopicSchema_;
  /**
   * <pre>
   * When true, use the topic's schema as the columns to write to in BigQuery,
   * if it exists.
   * </pre>
   *
   * <code>bool use_topic_schema = 2;</code>
   * @return The useTopicSchema.
   */
  @java.lang.Override
  public boolean getUseTopicSchema() {
    return useTopicSchema_;
  }

  public static final int WRITE_METADATA_FIELD_NUMBER = 3;
  private boolean writeMetadata_;
  /**
   * <pre>
   * When true, write the subscription name, message_id, publish_time,
   * attributes, and ordering_key to additional columns in the table. The
   * subscription name, message_id, and publish_time fields are put in their own
   * columns while all other message properties (other than data) are written to
   * a JSON object in the attributes column.
   * </pre>
   *
   * <code>bool write_metadata = 3;</code>
   * @return The writeMetadata.
   */
  @java.lang.Override
  public boolean getWriteMetadata() {
    return writeMetadata_;
  }

  public static final int DROP_UNKNOWN_FIELDS_FIELD_NUMBER = 4;
  private boolean dropUnknownFields_;
  /**
   * <pre>
   * When true and use_topic_schema is true, any fields that are a part of the
   * topic schema that are not part of the BigQuery table schema are dropped
   * when writing to BigQuery. Otherwise, the schemas must be kept in sync and
   * any messages with extra fields are not written and remain in the
   * subscription's backlog.
   * </pre>
   *
   * <code>bool drop_unknown_fields = 4;</code>
   * @return The dropUnknownFields.
   */
  @java.lang.Override
  public boolean getDropUnknownFields() {
    return dropUnknownFields_;
  }

  public static final int STATE_FIELD_NUMBER = 5;
  private int state_;
  /**
   * <pre>
   * Output only. An output-only field that indicates whether or not the subscription can
   * receive messages.
   * </pre>
   *
   * <code>.google.pubsub.v1.BigQueryConfig.State state = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The enum numeric value on the wire for state.
   */
  @java.lang.Override public int getStateValue() {
    return state_;
  }
  /**
   * <pre>
   * Output only. An output-only field that indicates whether or not the subscription can
   * receive messages.
   * </pre>
   *
   * <code>.google.pubsub.v1.BigQueryConfig.State state = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The state.
   */
  @java.lang.Override public com.google.pubsub.v1.BigQueryConfig.State getState() {
    @SuppressWarnings("deprecation")
    com.google.pubsub.v1.BigQueryConfig.State result = com.google.pubsub.v1.BigQueryConfig.State.valueOf(state_);
    return result == null ? com.google.pubsub.v1.BigQueryConfig.State.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(table_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, table_);
    }
    if (useTopicSchema_ != false) {
      output.writeBool(2, useTopicSchema_);
    }
    if (writeMetadata_ != false) {
      output.writeBool(3, writeMetadata_);
    }
    if (dropUnknownFields_ != false) {
      output.writeBool(4, dropUnknownFields_);
    }
    if (state_ != com.google.pubsub.v1.BigQueryConfig.State.STATE_UNSPECIFIED.getNumber()) {
      output.writeEnum(5, state_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(table_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, table_);
    }
    if (useTopicSchema_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, useTopicSchema_);
    }
    if (writeMetadata_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, writeMetadata_);
    }
    if (dropUnknownFields_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, dropUnknownFields_);
    }
    if (state_ != com.google.pubsub.v1.BigQueryConfig.State.STATE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(5, state_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.pubsub.v1.BigQueryConfig)) {
      return super.equals(obj);
    }
    com.google.pubsub.v1.BigQueryConfig other = (com.google.pubsub.v1.BigQueryConfig) obj;

    if (!getTable()
        .equals(other.getTable())) return false;
    if (getUseTopicSchema()
        != other.getUseTopicSchema()) return false;
    if (getWriteMetadata()
        != other.getWriteMetadata()) return false;
    if (getDropUnknownFields()
        != other.getDropUnknownFields()) return false;
    if (state_ != other.state_) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TABLE_FIELD_NUMBER;
    hash = (53 * hash) + getTable().hashCode();
    hash = (37 * hash) + USE_TOPIC_SCHEMA_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getUseTopicSchema());
    hash = (37 * hash) + WRITE_METADATA_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getWriteMetadata());
    hash = (37 * hash) + DROP_UNKNOWN_FIELDS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getDropUnknownFields());
    hash = (37 * hash) + STATE_FIELD_NUMBER;
    hash = (53 * hash) + state_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.pubsub.v1.BigQueryConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.pubsub.v1.BigQueryConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.pubsub.v1.BigQueryConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.pubsub.v1.BigQueryConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.pubsub.v1.BigQueryConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.pubsub.v1.BigQueryConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.pubsub.v1.BigQueryConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.pubsub.v1.BigQueryConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.pubsub.v1.BigQueryConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.pubsub.v1.BigQueryConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.pubsub.v1.BigQueryConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.pubsub.v1.BigQueryConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.pubsub.v1.BigQueryConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Configuration for a BigQuery subscription.
   * </pre>
   *
   * Protobuf type {@code google.pubsub.v1.BigQueryConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.pubsub.v1.BigQueryConfig)
      com.google.pubsub.v1.BigQueryConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.pubsub.v1.PubsubProto.internal_static_google_pubsub_v1_BigQueryConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.pubsub.v1.PubsubProto.internal_static_google_pubsub_v1_BigQueryConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.pubsub.v1.BigQueryConfig.class, com.google.pubsub.v1.BigQueryConfig.Builder.class);
    }

    // Construct using com.google.pubsub.v1.BigQueryConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      table_ = "";

      useTopicSchema_ = false;

      writeMetadata_ = false;

      dropUnknownFields_ = false;

      state_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.pubsub.v1.PubsubProto.internal_static_google_pubsub_v1_BigQueryConfig_descriptor;
    }

    @java.lang.Override
    public com.google.pubsub.v1.BigQueryConfig getDefaultInstanceForType() {
      return com.google.pubsub.v1.BigQueryConfig.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.pubsub.v1.BigQueryConfig build() {
      com.google.pubsub.v1.BigQueryConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.pubsub.v1.BigQueryConfig buildPartial() {
      com.google.pubsub.v1.BigQueryConfig result = new com.google.pubsub.v1.BigQueryConfig(this);
      result.table_ = table_;
      result.useTopicSchema_ = useTopicSchema_;
      result.writeMetadata_ = writeMetadata_;
      result.dropUnknownFields_ = dropUnknownFields_;
      result.state_ = state_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.pubsub.v1.BigQueryConfig) {
        return mergeFrom((com.google.pubsub.v1.BigQueryConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.pubsub.v1.BigQueryConfig other) {
      if (other == com.google.pubsub.v1.BigQueryConfig.getDefaultInstance()) return this;
      if (!other.getTable().isEmpty()) {
        table_ = other.table_;
        onChanged();
      }
      if (other.getUseTopicSchema() != false) {
        setUseTopicSchema(other.getUseTopicSchema());
      }
      if (other.getWriteMetadata() != false) {
        setWriteMetadata(other.getWriteMetadata());
      }
      if (other.getDropUnknownFields() != false) {
        setDropUnknownFields(other.getDropUnknownFields());
      }
      if (other.state_ != 0) {
        setStateValue(other.getStateValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.pubsub.v1.BigQueryConfig parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.pubsub.v1.BigQueryConfig) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object table_ = "";
    /**
     * <pre>
     * The name of the table to which to write data, of the form
     * {projectId}:{datasetId}.{tableId}
     * </pre>
     *
     * <code>string table = 1;</code>
     * @return The table.
     */
    public java.lang.String getTable() {
      java.lang.Object ref = table_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        table_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of the table to which to write data, of the form
     * {projectId}:{datasetId}.{tableId}
     * </pre>
     *
     * <code>string table = 1;</code>
     * @return The bytes for table.
     */
    public com.google.protobuf.ByteString
        getTableBytes() {
      java.lang.Object ref = table_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        table_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of the table to which to write data, of the form
     * {projectId}:{datasetId}.{tableId}
     * </pre>
     *
     * <code>string table = 1;</code>
     * @param value The table to set.
     * @return This builder for chaining.
     */
    public Builder setTable(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      table_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the table to which to write data, of the form
     * {projectId}:{datasetId}.{tableId}
     * </pre>
     *
     * <code>string table = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTable() {
      
      table_ = getDefaultInstance().getTable();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the table to which to write data, of the form
     * {projectId}:{datasetId}.{tableId}
     * </pre>
     *
     * <code>string table = 1;</code>
     * @param value The bytes for table to set.
     * @return This builder for chaining.
     */
    public Builder setTableBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      table_ = value;
      onChanged();
      return this;
    }

    private boolean useTopicSchema_ ;
    /**
     * <pre>
     * When true, use the topic's schema as the columns to write to in BigQuery,
     * if it exists.
     * </pre>
     *
     * <code>bool use_topic_schema = 2;</code>
     * @return The useTopicSchema.
     */
    @java.lang.Override
    public boolean getUseTopicSchema() {
      return useTopicSchema_;
    }
    /**
     * <pre>
     * When true, use the topic's schema as the columns to write to in BigQuery,
     * if it exists.
     * </pre>
     *
     * <code>bool use_topic_schema = 2;</code>
     * @param value The useTopicSchema to set.
     * @return This builder for chaining.
     */
    public Builder setUseTopicSchema(boolean value) {
      
      useTopicSchema_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When true, use the topic's schema as the columns to write to in BigQuery,
     * if it exists.
     * </pre>
     *
     * <code>bool use_topic_schema = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearUseTopicSchema() {
      
      useTopicSchema_ = false;
      onChanged();
      return this;
    }

    private boolean writeMetadata_ ;
    /**
     * <pre>
     * When true, write the subscription name, message_id, publish_time,
     * attributes, and ordering_key to additional columns in the table. The
     * subscription name, message_id, and publish_time fields are put in their own
     * columns while all other message properties (other than data) are written to
     * a JSON object in the attributes column.
     * </pre>
     *
     * <code>bool write_metadata = 3;</code>
     * @return The writeMetadata.
     */
    @java.lang.Override
    public boolean getWriteMetadata() {
      return writeMetadata_;
    }
    /**
     * <pre>
     * When true, write the subscription name, message_id, publish_time,
     * attributes, and ordering_key to additional columns in the table. The
     * subscription name, message_id, and publish_time fields are put in their own
     * columns while all other message properties (other than data) are written to
     * a JSON object in the attributes column.
     * </pre>
     *
     * <code>bool write_metadata = 3;</code>
     * @param value The writeMetadata to set.
     * @return This builder for chaining.
     */
    public Builder setWriteMetadata(boolean value) {
      
      writeMetadata_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When true, write the subscription name, message_id, publish_time,
     * attributes, and ordering_key to additional columns in the table. The
     * subscription name, message_id, and publish_time fields are put in their own
     * columns while all other message properties (other than data) are written to
     * a JSON object in the attributes column.
     * </pre>
     *
     * <code>bool write_metadata = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearWriteMetadata() {
      
      writeMetadata_ = false;
      onChanged();
      return this;
    }

    private boolean dropUnknownFields_ ;
    /**
     * <pre>
     * When true and use_topic_schema is true, any fields that are a part of the
     * topic schema that are not part of the BigQuery table schema are dropped
     * when writing to BigQuery. Otherwise, the schemas must be kept in sync and
     * any messages with extra fields are not written and remain in the
     * subscription's backlog.
     * </pre>
     *
     * <code>bool drop_unknown_fields = 4;</code>
     * @return The dropUnknownFields.
     */
    @java.lang.Override
    public boolean getDropUnknownFields() {
      return dropUnknownFields_;
    }
    /**
     * <pre>
     * When true and use_topic_schema is true, any fields that are a part of the
     * topic schema that are not part of the BigQuery table schema are dropped
     * when writing to BigQuery. Otherwise, the schemas must be kept in sync and
     * any messages with extra fields are not written and remain in the
     * subscription's backlog.
     * </pre>
     *
     * <code>bool drop_unknown_fields = 4;</code>
     * @param value The dropUnknownFields to set.
     * @return This builder for chaining.
     */
    public Builder setDropUnknownFields(boolean value) {
      
      dropUnknownFields_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When true and use_topic_schema is true, any fields that are a part of the
     * topic schema that are not part of the BigQuery table schema are dropped
     * when writing to BigQuery. Otherwise, the schemas must be kept in sync and
     * any messages with extra fields are not written and remain in the
     * subscription's backlog.
     * </pre>
     *
     * <code>bool drop_unknown_fields = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearDropUnknownFields() {
      
      dropUnknownFields_ = false;
      onChanged();
      return this;
    }

    private int state_ = 0;
    /**
     * <pre>
     * Output only. An output-only field that indicates whether or not the subscription can
     * receive messages.
     * </pre>
     *
     * <code>.google.pubsub.v1.BigQueryConfig.State state = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return The enum numeric value on the wire for state.
     */
    @java.lang.Override public int getStateValue() {
      return state_;
    }
    /**
     * <pre>
     * Output only. An output-only field that indicates whether or not the subscription can
     * receive messages.
     * </pre>
     *
     * <code>.google.pubsub.v1.BigQueryConfig.State state = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param value The enum numeric value on the wire for state to set.
     * @return This builder for chaining.
     */
    public Builder setStateValue(int value) {
      
      state_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. An output-only field that indicates whether or not the subscription can
     * receive messages.
     * </pre>
     *
     * <code>.google.pubsub.v1.BigQueryConfig.State state = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return The state.
     */
    @java.lang.Override
    public com.google.pubsub.v1.BigQueryConfig.State getState() {
      @SuppressWarnings("deprecation")
      com.google.pubsub.v1.BigQueryConfig.State result = com.google.pubsub.v1.BigQueryConfig.State.valueOf(state_);
      return result == null ? com.google.pubsub.v1.BigQueryConfig.State.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Output only. An output-only field that indicates whether or not the subscription can
     * receive messages.
     * </pre>
     *
     * <code>.google.pubsub.v1.BigQueryConfig.State state = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param value The state to set.
     * @return This builder for chaining.
     */
    public Builder setState(com.google.pubsub.v1.BigQueryConfig.State value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      state_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. An output-only field that indicates whether or not the subscription can
     * receive messages.
     * </pre>
     *
     * <code>.google.pubsub.v1.BigQueryConfig.State state = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return This builder for chaining.
     */
    public Builder clearState() {
      
      state_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.pubsub.v1.BigQueryConfig)
  }

  // @@protoc_insertion_point(class_scope:google.pubsub.v1.BigQueryConfig)
  private static final com.google.pubsub.v1.BigQueryConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.pubsub.v1.BigQueryConfig();
  }

  public static com.google.pubsub.v1.BigQueryConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<BigQueryConfig>
      PARSER = new com.google.protobuf.AbstractParser<BigQueryConfig>() {
    @java.lang.Override
    public BigQueryConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new BigQueryConfig(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<BigQueryConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<BigQueryConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.pubsub.v1.BigQueryConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

